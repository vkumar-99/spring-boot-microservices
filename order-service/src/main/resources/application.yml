spring:
  application:
    name: order-service
  datasource:
    url: "${DB_URL:jdbc:postgresql://localhost:25432/postgres}"
    username: "${DB_USERNAME:postgres}"
    password: "${DB_PASSWORD:postgres}"
  jpa:
    open-in-view: false
  rabbitmq:
    host: "${RABBITMQ_HOST:localhost}"
    port: "${RABBITMQ_PORT:5672}"
    username: "${RABBITMQ_USERNAME:guest}"
    password: "${RABBITMQ_PASSWORD:guest}"


server:
  port: 8082
  shutdown: graceful

management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    git:
      mode: full

resilience4j:
  retry:
    backends:
      catalog-service:
        max-attempts: 2
        wait-duration: 1s
  circuitbreaker:
    backends:
      catalog-service:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 6
        minimum-number-of-calls: 4
        wait-duration-in-open-state: 20s
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50


#### Queue config ####
order:
  catalog-service-url: http://localhost:8081
  order-event-exchange: order-exchange
  new-order-queue: new-order
  delivered-order-queue: delivered-order
  cancelled-order-queue: cancelled-order
  error-order-queue: error-order
